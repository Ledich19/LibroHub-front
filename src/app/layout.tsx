// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { ApolloWrapper } from "./ApolloWrapper";
import Sidebar from "@/components/Sidebar/Sidebar";
import Breadcrumbs from "@/components/Breadcrumbs";
import { getClient } from "@/lib/apollo-server";
import { cookies } from "next/headers";
import { ViewerDocument, ViewerQuery, ViewerQueryVariables } from "../../generated/graphql";
import ToastProvider from "@/components/ToastProvider";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default async function RootLayout({
  children,  auth
}: Readonly<{
  children: React.ReactNode;
  auth: React.ReactNode
  
}>) {
  const cookieStore = await cookies();
  const token = cookieStore.get('session')?.value;


  let user = null;
  if (token) {
    const { data, error } = await getClient().query<ViewerQuery, ViewerQueryVariables>({
      query: ViewerDocument,
    });

    user = data.viewer;
  }

  return (
    // suppressHydrationWarning 
    <html lang="ru" data-theme="dark" >
      <body className="flex h-screen overflow-hidden">

        <ApolloWrapper>
        <ToastProvider>
          <Sidebar viewer={user ?? undefined} />

          <main className="flex-1 overflow-y-auto h-full">
            <Breadcrumbs />
            {children}
          </main>
          
            {auth}
        </ToastProvider>
        </ApolloWrapper>
      </body>
    </html>
  );
}
